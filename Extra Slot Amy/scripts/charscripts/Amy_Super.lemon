//# address-hook(0x01a170) end(0x01a198)
function void fn01a170()
{
	if (global.xtrachar != 3)
	{
		base.fn01a170()
		return
	}
	// No flickies
}

global bool Amy_Super_Pallete
global bool Amy_Glow
global bool Amy_Flash
// global bool Amy_EXPAL

function void SuperandHyperPalette_Amy(u32 AmyColor1, u32 AmyColor2, u32 AmyColor3)
{
	u8 character = getMainCharacter()
					
	bool isHyperEffect = (super.active == 0xff || super.active.tails == 0xff)
	u16 nextFrame = (super.palettefx.frame + 6) % (isHyperEffect ? 108 : 18)
	u16 FlashOpacity = 0x100
	if (Amy_Glow != 0)
		FlashOpacity = (Amy_Flash == 0) ? 0x100 : 0xc8

	u16 blendFactor = super.palettefx.timer.tails * FlashOpacity / (isHyperEffect ? 0x07 : 0x0f)

	if (nextFrame % 18 == 0)
		blendFactor = FlashOpacity - blendFactor
	else if (nextFrame % 18 == 12)
		blendFactor = 0
	for (u8 underwater = 0; underwater < (level.water_present ? 2 : 1); ++underwater)
	{
		u32 offset = character * 0x40 + (underwater ? 0x300 : 0)
		u32 source = 0x802180 + offset
		u32 dest   = 0x802000 + offset
		// u32 dest2  = 0x802300 + offset

		// Load modded Super palette
		u8 line = 5
		if (isHyperEffect && Amy_Super_Pallete)
		{
			// Hyper color cycle (if mod supports it)
			line = 6 + super.palettefx.frame / 18
			if (!System.hasExternalPaletteData(getExtraCharacterPaletteKey(3), line))
				line = 5
		}
		// u8 line2 = 0
		// if (Ray_UnderDaSea)
		// {
		// 	if (underwater)
		// 		line += (global.zone == 0 || global.zone == 5) ? 7 : 14
		// 	line2 = line+1
		// }
		zeroMemory(dest, 0x40)
		u16 numColors = System.loadExternalPaletteData(getExtraCharacterPaletteKey(3), line, 0x800000, 0x20)
		for (u16 i = 0; i < numColors; ++i)
		{

			u32 rgba = u32[0x800000 + i * 4]
			u16[dest + i * 2] = (rgba & 0xff000000) ? packColorExt(rgba) : 0
			if (AmyCornGold())
			{
				if (outro.ending_type == 2 || (global.zone_act == 0x0c00 && global.super_emeralds >= 7))
				{
					// nothing
				}
				else
				{
					u16[dest + 2 * 2] = AmyColor1
					u16[dest + 2 * 3] = AmyColor2
					u16[dest + 2 * 4] = AmyColor3
				}
			}
		}

		// if (Ray_UnderDaSea)
		// {
		// 	u16 numColors2 = System.loadExternalPaletteData(getExtraCharacterPaletteKey(3), line2, 0x800000, 0x20)
		// 	for (u16 i = 0; i < numColors2; ++i)
		// 	{
		// 		u32 rgba = u32[0x800000 + i * 4]
		// 		u16[dest2 + i * 2] = (rgba & 0xff000000) ? packColorExt(rgba) : 0
		// 	}
		// }

		for (u8 k = 0; k < 0x40; k += 2)
		{
			if (u16[dest + k] == 0)
			{
				// Use original color as fallback
				u16[dest + k] = u16[source + k]
			}
			else
			{
				// Apply Ray_Flash effect
				// u16[dest + k] = blendColorsPacked(u16[dest + k], 0x0eee, blendFactor)
				u16[dest + k] = blendColorsPacked(u16[dest + k], ((Amy_Glow == 0) ? u16[source + k] : 0x0eee), blendFactor)
			}
		}
	}
	--super.palettefx.timer.tails
	if (super.palettefx.timer.tails < 0)
	{
		super.palettefx.timer.tails = isHyperEffect ? 0x07 : 0x0f
		super.palettefx.frame = nextFrame
	} 
}

global u32 AmyColor1
global u32 AmyColor2
global u32 AmyColor3

function void AmyGoldpalette()
{
	AmyColor1 = 0x08EE
	AmyColor2 = 0x00EE
	AmyColor3 = 0x00AA

	if (AmyPalette == 3) // Mania
	{
		AmyColor1 = 0x03DE
		AmyColor2 = 0x01CE
		AmyColor3 = 0x00BE
	}
	else if (AmyPalette == 5) // Undertale: Bits & Pieces
	{
		AmyColor1 = 0x05CF
		AmyColor2 = 0x04BE
		AmyColor3 = 0x058E
	}
	else if (AmyPalette == 7) // Sonic Drift 2
	{
		AmyColor1 = 0x0AFF
		AmyColor2 = 0x05FF
		AmyColor3 = 0x00FF
	}
}

function bool AmyCornGold()
{
	return (Amy_Super_Pallete && (super.active.tails == 1 || (global.zone == 0x0d && outro.ending_type == 0)))
}

function void UpdatePaletteEffects.SuperForm.moddingVersion(u8 characterVersion)
{
	if (global.xtrachar != 3)
	{
		base.UpdatePaletteEffects.SuperForm.moddingVersion(characterVersion)
		return
	}

	if (AmyCornGold())
		AmyGoldpalette()

	if (super.palettefx.state & 0x80)
	{
		SuperandHyperPalette_Amy(AmyColor1, AmyColor2, AmyColor3)
	}
	else if (super.palettefx.state == 1)
	{
		// Update ongoing palette effect
		u8 character = getMainCharacter()
		bool isHyperEffect = (super.active == 0xff || super.active.tails == 0xff)

		--super.palettefx.timer.tails
		if (super.palettefx.timer.tails >= 0)
			return

		// Fade in effect
		super.palettefx.frame += 6
		super.palettefx.timer.tails = 1

		for (u8 underwater = 0; underwater < (level.water_present ? 2 : 1); ++underwater)
		{
			u16 blendFactor = clamp((super.palettefx.frame + (1 - super.palettefx.timer.tails) * 6 / 2) * 0x100 / 0x24, 0, 0x100)
			
			u32 offset = character * 0x40 + (underwater ? 0x300 : 0)
			u32 source = 0x802180 + offset
			u32 dest   = 0x802000 + offset
			// u32 dest2  = 0x802300 + offset

			// Load modded Super palette
			u8 line = 5
			if (isHyperEffect && Amy_Super_Pallete)
			{
				// Hyper color cycle (if mod supports it)
				line = 7
				if (!System.hasExternalPaletteData(getExtraCharacterPaletteKey(3), line))
					line = 5
			}
			// u8 line2 = 0
			// if (Ray_UnderDaSea)
			// {
			// 	if (underwater)
			// 		line += (global.zone == 0 || global.zone == 5) ? 7 : 14
			// 	line2 = line+1
			// }

			zeroMemory(dest, 0x40)
			u16 numColors = System.loadExternalPaletteData(getExtraCharacterPaletteKey(3), line, 0x800000, 0x20)
			for (u16 i = 0; i < numColors; ++i)
			{

				u32 rgba = u32[0x800000 + i * 4]
				u16[dest + i * 2] = (rgba & 0xff000000) ? packColorExt(rgba) : 0
				if (AmyCornGold())
				{
					if (outro.ending_type == 2 || (global.zone_act == 0x0c00 && global.super_emeralds >= 7))
					{
						// nothing
					}
					else
					{
						u16[dest + 2 * 2] = AmyColor1
						u16[dest + 2 * 3] = AmyColor2
						u16[dest + 2 * 4] = AmyColor3
					}
				}
			}

			// if (Ray_UnderDaSea)
			// {
			// 	u16 numColors2 = System.loadExternalPaletteData(getExtraCharacterPaletteKey(3), line2, 0x800000, 0x20)
			// 	for (u16 i = 0; i < numColors2; ++i)
			// 	{
			// 		u32 rgba = u32[0x800000 + i * 4]
			// 		u16[dest2 + i * 2] = (rgba & 0xff000000) ? packColorExt(rgba) : 0
			// 	}
			// }

			for (u8 k = 0; k < 0x40; k += 2)
			{
				if (u16[dest + k] == 0)
				{
					// Use original color as fallback
					u16[dest + k] = u16[source + k]
				}
				else
				{
					// Apply flash effect
					u16[dest + k] = blendColorsPacked(u16[source + k], u16[dest + k], blendFactor)
				}
			}
		}

		if (super.palettefx.frame < 36)
			return
				
		// Fully faded in
		super.palettefx.state = 0xff
		u8[0xffffb02e] = 0		// Reset "char.control_flags"
	}
	else  // (super.palettefx.state == 2)
	{
		// Fade out
		if (super.palettefx.frame >= 30)
		{
			// This is the first frame, set everything so that only the timer is used
			super.palettefx.frame = 0
			super.palettefx.frame.tails = 0
			super.palettefx.timer.tails = 0x11
		}

		u16 blendFactor = clamp(u16(super.palettefx.timer.tails) * 0x100 / 0x12, 0, 0x100)
		for (u8 underwater = 0; underwater < (level.water_present ? 2 : 1); ++underwater)
		{
			u32 offset = getMainCharacter() * 0x40 + (underwater ? 0x300 : 0)
			u32 source = 0x802180 + offset
			u32 dest   = 0x802000 + offset

			for (u8 k = 0; k < 0x40; k += 2)
			{
				if (u16[dest + k] == 0)
				{
					// Use original color as fallback
					u16[dest + k] = u16[source + k]
				}
				else
				{
					// Apply flash effect
					u16[dest + k] = blendColorsPacked(u16[source + k], u16[dest + k], blendFactor)
				}
			}
		}
		
		if (super.palettefx.timer.tails == 0)
		{
			// Fully faded out
			super.palettefx.state = 0
		}
		else
		{
			--super.palettefx.timer.tails
		}
	}
}

// Prevents Amy from walking in mid-air, while trying to go super, during the MGZ act 2 boss
function void Character.cancelSuperTransformation()
{
	if (A0 == 0xffffb000)
	{
		if (global.xtrachar == 3)
			Amy.KillScreen = false
		base.Character.cancelSuperTransformation()
	}
}

// Fix for Amy's super/hyper palette during the ending when she's falling from space
//# address-hook(0x05d8bc) end(0x05d9e8)
function void fn05d8bc()
{
	base.fn05d8bc()
	if (outro.ending_type >= 0 && global.xtrachar == 3)
	{
		if (outro.ending_type == 0)
		{
			fn05fc8e()
			if (allocDynamicObjectStd())
			{
				objA1.update_address = 0x05fdd4
			}
		}
		else
		{
			u8[0xffffb020] = 0
			fn05fcce()
		}
	}
}

// Ending where Amy jumps off the plane and turns super/hyper 
//# address-hook(0x08648c) end(0x08653e)
function void fn08648c()
{
	base.fn08648c()
	if (global.xtrachar == 3)
		super.active.tails = (global.super_emeralds == 7) ? 0xff : 0x01
}